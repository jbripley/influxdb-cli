#!/usr/bin/env ruby

require 'rubygems'
require 'influxdb'
require 'pry'
require 'thor'
require 'awesome_print'
require 'terminal-table'

Dir['../lib/**/*.rb'].each &method(:require)

class InfluxDBClientTasks < Thor
  desc 'db', 'Connect to InfluxDB'
  method_option :host,      :default => 'localhost',  :aliases => '-h',  :desc => 'Hostname'
  method_option :port,      :default => 8086,         :desc => 'Port'
  method_option :username,  :default => 'root',       :aliases => '-u',  :desc => 'Username'
  method_option :password,  :default => 'root',       :aliases => '-p',  :desc => 'Password'
  method_option :database,  :default => 'db',         :aliases => '-d',  :desc => 'Database'
  def db
    puts "Connecting to #{options.inspect}"
    @@db ||= InfluxDB::Client.new options[:database],
      { username: options[:username], password: options[:password], host: options[:host], port: options[:port] }
    puts 'âœ” ready'
  end

  def self.db; @@db; end

  default_task :db
end

def db; InfluxDBClientTasks.db; end

def query(query)
  result = db.query(query)
  count = {}
  result.to_h.keys.each do |serie_name|
    headings = result[serie_name].first.keys
    rows = result[serie_name].collect(&:values)
    table = Terminal::Table.new title: serie_name, headings: headings, rows: rows
    puts table
    # empty line
    puts
    # count total per serie
    count["#{serie_name}.count"] = result[serie_name].size
  end
  count
end

InfluxDBClientTasks.start

Pry.config.print = proc { |output, value| Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output) }

pry

