#!/usr/bin/env ruby

require 'rubygems'
require 'influxdb'
require 'pry'
require 'thor'
require 'awesome_print'

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')

require 'influxdb_client/version'
require 'influxdb_client/client'

class InfluxDBClientTasks < Thor
  desc 'db', 'Connect to InfluxDB'
  method_option :host,      :default => 'localhost',  :aliases => '-h',  :desc => 'Hostname'
  method_option :port,      :default => 8086,         :desc => 'Port'
  method_option :username,  :default => 'root',       :aliases => '-u',  :desc => 'Username'
  method_option :password,  :default => 'root',       :aliases => '-p',  :desc => 'Password'
  method_option :database,  :default => 'db',         :aliases => '-d',  :desc => 'Database'
  def db
    puts "Connecting to #{options.inspect}"
    @@db ||= InfluxDB::Client.new options[:database],
      { username: options[:username], password: options[:password], host: options[:host], port: options[:port] }
    puts 'âœ” ready'
  end

  desc 'version', 'Show influxdb-cli version'
  def version
    puts "influxdb-cli #{InfluxDBClient::VERSION}"
    # skip `pry` console
    exit 0
  end

  def self.db; @@db; end

  default_task :db
end

# Returns {InfluxDB::Client} instance using given parameters.
#
# @return [InfluxDB::Client]
def db; InfluxDBClientTasks.db; end

InfluxDBClientTasks.start

# allow typing queries directly from console i.e.`select * from deploys` instead of `query('select * from deploys')`.
# matches `delete from ...` and `select ... from ...`
Pry::Commands.block_command InfluxDBClient::Client::QUERY_LANGUAGE_MATCHER, 'Execute a query' do |cmd|
  result = db.query(cmd)
  InfluxDBClient::Client.print_tabularize(result)
end

# awesome_print
Pry.config.print = proc { |output, value| Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output) }

# TODO start `pry` only in case of `db` command, `help` and `version` should not start `pry`
pry

